/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Vesting, VestingInterface } from '../Vesting'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'token_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidLength',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotStarted',
    type: 'error',
  },
  {
    inputs: [],
    name: 'WrongProof',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroClaim',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'roundName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Claim',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'InitializedVesting',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ROOT',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'allocations',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'proof',
        type: 'bytes32[]',
      },
      {
        internalType: 'uint256',
        name: 'targetAmount',
        type: 'uint256',
      },
    ],
    name: 'claimAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'roundId',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'allocations',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'proof',
        type: 'bytes32[]',
      },
      {
        internalType: 'uint256',
        name: 'targetAmount',
        type: 'uint256',
      },
    ],
    name: 'claimSingle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'claimed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllocations',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'getRound',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            components: [
              {
                internalType: 'uint64',
                name: 'startTimestamp',
                type: 'uint64',
              },
              {
                internalType: 'uint32',
                name: 'duration',
                type: 'uint32',
              },
              {
                internalType: 'uint32',
                name: 'linearUnits',
                type: 'uint32',
              },
              {
                internalType: 'uint128',
                name: 'percentageD',
                type: 'uint128',
              },
            ],
            internalType: 'struct Vesting.VestingPeriod[]',
            name: 'periods',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Vesting.VestingRound',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRounds',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            components: [
              {
                internalType: 'uint64',
                name: 'startTimestamp',
                type: 'uint64',
              },
              {
                internalType: 'uint32',
                name: 'duration',
                type: 'uint32',
              },
              {
                internalType: 'uint32',
                name: 'linearUnits',
                type: 'uint32',
              },
              {
                internalType: 'uint128',
                name: 'percentageD',
                type: 'uint128',
              },
            ],
            internalType: 'struct Vesting.VestingPeriod[]',
            name: 'periods',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Vesting.VestingRound[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'startTimestamp_',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'leaves_',
        type: 'string',
      },
      {
        internalType: 'bytes32',
        name: 'root_',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            components: [
              {
                internalType: 'uint64',
                name: 'startTimestamp',
                type: 'uint64',
              },
              {
                internalType: 'uint32',
                name: 'duration',
                type: 'uint32',
              },
              {
                internalType: 'uint32',
                name: 'linearUnits',
                type: 'uint32',
              },
              {
                internalType: 'uint128',
                name: 'percentageD',
                type: 'uint128',
              },
            ],
            internalType: 'struct Vesting.VestingPeriod[]',
            name: 'periods',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Vesting.VestingRound[]',
        name: 'rounds_',
        type: 'tuple[]',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'root_',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'leaves_',
        type: 'string',
      },
    ],
    name: 'resetROOT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'rounds',
    outputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'startTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'allocation',
        type: 'uint256',
      },
    ],
    name: 'unlocked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200241e3803806200241e8339810160408190526200003491620000cc565b6200003f3362000063565b600180556001600160a01b0382166080526200005b8162000063565b50506200010b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000c957600080fd5b50565b60008060408385031215620000e057600080fd5b8251620000ed81620000b3565b60208401519092506200010081620000b3565b809150509250929050565b6080516122e9620001356000396000818161029501528181611267015261149401526122e96000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638f1327c0116100a2578063ebd2ebb811610071578063ebd2ebb814610244578063ee59fc2d14610257578063f2fde38b1461026a578063f3fef3a31461027d578063fc0c546a1461029057600080fd5b80638f1327c0146101f557806399e075ed14610215578063bd0d783614610228578063e6fd48bc1461023b57600080fd5b80636984d070116100e95780636984d07014610195578063715018a6146101aa5780638b649b94146101b45780638c65c81f146101bd5780638da5cb5b146101d057600080fd5b8063310f2de61461011b5780634dd6c8de146101415780635909c12f1461017757806365ed6e2314610180575b600080fd5b61012e6101293660046117fb565b6102b7565b6040519081526020015b60405180910390f35b61012e61014f366004611839565b6001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61012e60045481565b61018861057c565b60405161013891906118b3565b61019d61060e565b6040516101389190611968565b6101b26107fd565b005b61012e60035481565b6101886101cb3660046119ca565b610811565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610138565b6102086102033660046119ca565b6108af565b60405161013891906119e3565b6101b2610223366004611a41565b610a11565b6101b2610236366004611bf8565b610ada565b61012e60065481565b6101b2610252366004611e7a565b611095565b6101b2610265366004611ec0565b6110b3565b6101b2610278366004611f33565b6111d1565b6101b261028b366004611839565b61124a565b6101dd7f000000000000000000000000000000000000000000000000000000000000000081565b60008281526002602052604081206001908101549082908180805b858110156105085760008981526002602052604081206001018054839081106102fd576102fd611f4e565b60009182526020808320909101548c835260029091526040822060010180546001600160401b039092169350908490811061033a5761033a611f4e565b6000918252602080832091909101548d83526002909152604082206001018054600160401b90920463ffffffff169350908590811061037b5761037b611f4e565b600091825260208220015463ffffffff600160601b909104811692506103a390841685611f7a565b905042816001600160401b0316116104095760008d81526002602052604090206001018054869081106103d8576103d8611f4e565b6000918252602090912001546103fe90600160801b90046001600160801b031688611fa1565b9650505050506104f8565b806001600160401b0316846001600160401b03160361044a5760019750836001600160401b0316421061043d576001610440565b60005b60ff1698506104ad565b6000846001600160401b0316421115610473576104706001600160401b03861642611fc1565b90505b61047d8583611fd4565b6001600160401b031661049663ffffffff851683611ff4565b6104a0919061200b565b99508263ffffffff169850505b60008d81526002602052604090206001018054869081106104d0576104d0611f4e565b600091825260209091200154600160801b90046001600160801b031695506105089350505050565b6105018161202d565b90506102d2565b5060008361051f670de0b6b3a76400006064611ff4565b6105299190611ff4565b61053c866001600160801b038516611ff4565b61054f866001600160801b038716611ff4565b6105599190612046565b610563908a611ff4565b61056d919061200b565b96505050505050505b92915050565b60606005805461058b90612059565b80601f01602080910402602001604051908101604052809291908181526020018280546105b790612059565b80156106045780601f106105d957610100808354040283529160200191610604565b820191906000526020600020905b8154815290600101906020018083116105e757829003601f168201915b5050505050905090565b606060006003546001600160401b0381111561062c5761062c611ac2565b60405190808252806020026020018201604052801561067157816020015b604080518082019091526060808252602082015281526020019060019003908161064a5790505b50905060005b6003548110156107f7576000818152600260205260409081902081518083019092528054829082906106a890612059565b80601f01602080910402602001604051908101604052809291908181526020018280546106d490612059565b80156107215780601f106106f657610100808354040283529160200191610721565b820191906000526020600020905b81548152906001019060200180831161070457829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156107c157600084815260209081902060408051608081018252918501546001600160401b038116835263ffffffff600160401b8204811684860152600160601b820416918301919091526001600160801b03600160801b90910416606082015282526001909201910161074f565b50505050815250508282815181106107db576107db611f4e565b6020026020010181905250806107f09061202d565b9050610677565b50919050565b61080561129b565b61080f60006112f5565b565b60026020526000908152604090208054819061082c90612059565b80601f016020809104026020016040519081016040528092919081815260200182805461085890612059565b80156108a55780601f1061087a576101008083540402835291602001916108a5565b820191906000526020600020905b81548152906001019060200180831161088857829003601f168201915b5050505050905081565b604080518082019091526060808252602082015260008281526002602052604080822081518083019092528054829082906108e990612059565b80601f016020809104026020016040519081016040528092919081815260200182805461091590612059565b80156109625780601f1061093757610100808354040283529160200191610962565b820191906000526020600020905b81548152906001019060200180831161094557829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610a0257600084815260209081902060408051608081018252918501546001600160401b038116835263ffffffff600160401b8204811684860152600160601b820416918301919091526001600160801b03600160801b909104166060820152825260019092019101610990565b50505091525090949350505050565b600654421015610a3457604051636f312cbd60e01b815260040160405180910390fd5b6000858533604051602001610a4b9392919061208d565b604051602081830303815290604052805190602001209050610aa7600454828686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506113459050565b610ac45760405163923983b960e01b815260040160405180910390fd5b610ad0878787856113f5565b5050505050505050565b610ae261129b565b600054600160a81b900460ff1615808015610b0a57506000546001600160a01b90910460ff16105b80610b2b5750303b158015610b2b5750600054600160a01b900460ff166001145b610b935760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff60a01b1916600160a01b1790558015610bc0576000805460ff60a81b1916600160a81b1790555b841580610bcc57504285105b15610bea57604051632a9ffab760e21b815260040160405180910390fd5b81516003819055600003610c115760405163251f56a160e21b815260040160405180910390fd5b60068590556005610c228582612122565b50600483905560005b600354811015611018576000838281518110610c4957610c49611f4e565b60200260200101516020015151905080600003610c795760405163251f56a160e21b815260040160405180910390fd5b838281518110610c8b57610c8b611f4e565b6020908102919091018101515160008481526002909252604090912090610cb29082612122565b506000805b82811015610fd2578015610dcf57858481518110610cd757610cd7611f4e565b602002602001015160200151600182610cf09190611fc1565b81518110610d0057610d00611f4e565b60200260200101516020015163ffffffff16868581518110610d2457610d24611f4e565b602002602001015160200151600183610d3d9190611fc1565b81518110610d4d57610d4d611f4e565b6020026020010151600001516001600160401b0316610d6c9190612046565b868581518110610d7e57610d7e611f4e565b6020026020010151602001518281518110610d9b57610d9b611f4e565b6020026020010151600001516001600160401b03161015610dcf57604051632a9ffab760e21b815260040160405180910390fd5b6000868581518110610de357610de3611f4e565b6020026020010151602001518281518110610e0057610e00611f4e565b60200260200101516020015190506000878681518110610e2257610e22611f4e565b6020026020010151602001518381518110610e3f57610e3f611f4e565b602002602001015160400151905060008263ffffffff16118015610e6e57508063ffffffff168263ffffffff16105b15610e8c57604051632a9ffab760e21b815260040160405180910390fd5b60026000878152602001908152602001600020600101888781518110610eb457610eb4611f4e565b6020026020010151602001518481518110610ed157610ed1611f4e565b60209081029190910181015182546001810184556000938452928290208151930180549282015160408301516060909301516001600160401b039095166bffffffffffffffffffffffff1990941693909317600160401b63ffffffff94851602176bffffffffffffffffffffffff16600160601b93909216929092026001600160801b0390811691909117600160801b91909316029190911790558751889087908110610f8057610f80611f4e565b6020026020010151602001518381518110610f9d57610f9d611f4e565b6020026020010151606001516001600160801b031684610fbd9190612046565b9350505080610fcb9061202d565b9050610cb7565b50610fe6670de0b6b3a76400006064611ff4565b811461100557604051632a9ffab760e21b815260040160405180910390fd5b5050806110119061202d565b9050610c2b565b50604051339042907fcef184a324e18f1755dfcf0ff1b3c7d6990dfb41078f16c7af262b4720ab09ad90600090a3801561108e576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b61109d61129b565b600482905560056110ae8282612122565b505050565b6006544210156110d657604051636f312cbd60e01b815260040160405180910390fd5b60008585336040516020016110ed9392919061208d565b604051602081830303815290604052805190602001209050611149600454828686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506113459050565b6111665760405163923983b960e01b815260040160405180910390fd5b8160005b600354811015610ad05787878281811061118657611186611f4e565b90506020020135600003156111c15760006111a3828a8a866113f5565b90506111af8184611fc1565b9250826000036111bf5750610ad0565b505b6111ca8161202d565b905061116a565b6111d961129b565b6001600160a01b03811661123e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b8a565b611247816112f5565b50565b61125261129b565b61125a61151e565b61128e6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383611577565b61129760018055565b5050565b6000546001600160a01b0316331461080f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b8a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82516000908290825b818110156113e957600087828151811061136a5761136a611f4e565b602002602001015190508084106113aa576040805160208101839052908101859052606001604051602081830303815290604052805190602001206113d5565b6040805160208101869052908101829052606001604051602081830303815290604052805190602001205b935050806113e29061202d565b905061134e565b50509092149392505050565b60006113ff61151e565b33600090815260076020908152604080832088845290915281205461143c8787878a81811061143057611430611f4e565b905060200201356102b7565b6114469190611fc1565b905060008184116114575783611459565b815b90506114663388836115c9565b80600003611487576040516323f3c4e160e11b815260040160405180910390fd5b6114bb6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611577565b6000878152600260205260409081902090519193508391339142917f677a96caf5261823bc89b455735dcce67f76b8c782a3043f070b8c8f8051e3a6916115039186906121e1565b60405180910390a3505061151660018055565b949350505050565b6002600154036115705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b8a565b6002600155565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110ae908490611606565b6001600160a01b0383166000908152600760209081526040808320858452909152812080548392906115fc908490612046565b9091555050505050565b600061165b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116d89092919063ffffffff16565b8051909150156110ae57808060200190518101906116799190612275565b6110ae5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b8a565b6060611516848460008585600080866001600160a01b031685876040516116ff9190612297565b60006040518083038185875af1925050503d806000811461173c576040519150601f19603f3d011682016040523d82523d6000602084013e611741565b606091505b50915091506117528783838761175d565b979650505050505050565b606083156117cc5782516000036117c5576001600160a01b0385163b6117c55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b8a565b5081611516565b61151683838151156117e15781518083602001fd5b8060405162461bcd60e51b8152600401610b8a91906118b3565b6000806040838503121561180e57600080fd5b50508035926020909101359150565b80356001600160a01b038116811461183457600080fd5b919050565b6000806040838503121561184c57600080fd5b6118558361181d565b946020939093013593505050565b60005b8381101561187e578181015183820152602001611866565b50506000910152565b6000815180845261189f816020860160208601611863565b601f01601f19169290920160200192915050565b6020815260006118c66020830184611887565b9392505050565b6000604082518185526118e282860182611887565b60208581015187830388830152805180845290820193509091600091908301905b8083101561195c57845180516001600160401b031683528481015163ffffffff908116868501528782015116878401526060908101516001600160801b0316908301529383019360019290920191608090910190611903565b50979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156119bd57603f198886030184526119ab8583516118cd565b9450928501929085019060010161198f565b5092979650505050505050565b6000602082840312156119dc57600080fd5b5035919050565b6020815260006118c660208301846118cd565b60008083601f840112611a0857600080fd5b5081356001600160401b03811115611a1f57600080fd5b6020830191508360208260051b8501011115611a3a57600080fd5b9250929050565b60008060008060008060808789031215611a5a57600080fd5b8635955060208701356001600160401b0380821115611a7857600080fd5b611a848a838b016119f6565b90975095506040890135915080821115611a9d57600080fd5b50611aaa89828a016119f6565b979a9699509497949695606090950135949350505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611afa57611afa611ac2565b60405290565b604051608081016001600160401b0381118282101715611afa57611afa611ac2565b604051601f8201601f191681016001600160401b0381118282101715611b4a57611b4a611ac2565b604052919050565b600082601f830112611b6357600080fd5b81356001600160401b03811115611b7c57611b7c611ac2565b611b8f601f8201601f1916602001611b22565b818152846020838601011115611ba457600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b03821115611bda57611bda611ac2565b5060051b60200190565b803563ffffffff8116811461183457600080fd5b60008060008060808587031215611c0e57600080fd5b843593506001600160401b0360208601351115611c2a57600080fd5b611c3a8660208701358701611b52565b9250604085013591506001600160401b0360608601351115611c5b57600080fd5b85601f606087013587010112611c7057600080fd5b611c88611c836060870135870135611bc1565b611b22565b6060860135860180358083526020808401939260059290921b90910101881015611cb157600080fd5b602060608801358801015b60608801358801803560051b01602001811015611e6d576001600160401b0381351115611ce857600080fd5b606088013588018135016040818b03601f19011215611d0657600080fd5b611d0e611ad8565b6001600160401b0360208301351115611d2657600080fd5b611d388b602080850135850101611b52565b81526001600160401b0360408301351115611d5257600080fd5b8a603f604084013584010112611d6757600080fd5b611d7d611c836020604085013585010135611bc1565b6020604084810135850182810135808552928401939260071b01018d1015611da457600080fd5b6040808501358501015b6040858101358601602081013560071b0101811015611e4e576080818f031215611dd757600080fd5b611ddf611b00565b81356001600160401b03811614611df557600080fd5b81358152611e0560208301611be4565b6020820152611e1660408301611be4565b604082015260608201356001600160801b03811614611e3457600080fd5b606082810135908201528352602090920191608001611dae565b5080602084015250508085525050602083019250602081019050611cbc565b5094979396509194505050565b60008060408385031215611e8d57600080fd5b8235915060208301356001600160401b03811115611eaa57600080fd5b611eb685828601611b52565b9150509250929050565b600080600080600060608688031215611ed857600080fd5b85356001600160401b0380821115611eef57600080fd5b611efb89838a016119f6565b90975095506020880135915080821115611f1457600080fd5b50611f21888289016119f6565b96999598509660400135949350505050565b600060208284031215611f4557600080fd5b6118c68261181d565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6001600160401b03818116838216019080821115611f9a57611f9a611f64565b5092915050565b6001600160801b03818116838216019080821115611f9a57611f9a611f64565b8181038181111561057657610576611f64565b6001600160401b03828116828216039080821115611f9a57611f9a611f64565b808202811582820484141761057657610576611f64565b60008261202857634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161203f5761203f611f64565b5060010190565b8082018082111561057657610576611f64565b600181811c9082168061206d57607f821691505b6020821081036107f757634e487b7160e01b600052602260045260246000fd5b6040808252810183905260006001600160fb1b038411156120ad57600080fd5b8360051b808660608501376001600160a01b03939093166020830152500160600192915050565b601f8211156110ae57600081815260208120601f850160051c810160208610156120fb5750805b601f850160051c820191505b8181101561211a57828155600101612107565b505050505050565b81516001600160401b0381111561213b5761213b611ac2565b61214f816121498454612059565b846120d4565b602080601f831160018114612184576000841561216c5750858301515b600019600386901b1c1916600185901b17855561211a565b600085815260208120601f198616915b828110156121b357888601518255948401946001909101908401612194565b50858210156121d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260008084546121f381612059565b8060408601526060600180841660008114612215576001811461222f57612260565b60ff1985168884015283151560051b880183019550612260565b8960005260208060002060005b868110156122575781548b820187015290840190820161223c565b8a018501975050505b50505050506020929092019290925292915050565b60006020828403121561228757600080fd5b815180151581146118c657600080fd5b600082516122a9818460208701611863565b919091019291505056fea264697066735822122009b12f45cc42eb40c73e4bf68a6c70867ee629c8ce025119ed456cb5ac89ba8964736f6c63430008120033'

export class Vesting__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    token_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vesting> {
    return super.deploy(token_, owner_, overrides || {}) as Promise<Vesting>
  }
  getDeployTransaction(
    token_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, owner_, overrides || {})
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting
  }
}
