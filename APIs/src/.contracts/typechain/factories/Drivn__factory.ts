/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Drivn, DrivnInterface } from '../Drivn'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'TOTAL_SUPPLY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162000c7638038062000c7683398101604081905262000034916200020b565b8181600362000044838262000303565b50600462000053828262000303565b50505062000073336a52b7d2dcc80cd2e40000006200007b60201b60201c565b5050620003f7565b6001600160a01b038216620000d65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000ea9190620003cf565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016e57600080fd5b81516001600160401b03808211156200018b576200018b62000146565b604051601f8301601f19908116603f01168101908282118183101715620001b657620001b662000146565b81604052838152602092508683858801011115620001d357600080fd5b600091505b83821015620001f75785820183015181830184015290820190620001d8565b600093810190920192909252949350505050565b600080604083850312156200021f57600080fd5b82516001600160401b03808211156200023757600080fd5b62000245868387016200015c565b935060208501519150808211156200025c57600080fd5b506200026b858286016200015c565b9150509250929050565b600181811c908216806200028a57607f821691505b602082108103620002ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014157600081815260208120601f850160051c81016020861015620002da5750805b601f850160051c820191505b81811015620002fb57828155600101620002e6565b505050505050565b81516001600160401b038111156200031f576200031f62000146565b620003378162000330845462000275565b84620002b1565b602080601f8311600181146200036f5760008415620003565750858301515b600019600386901b1c1916600185901b178555620002fb565b600085815260208120601f198616915b82811015620003a0578886015182559484019460019091019084016200037f565b5085821015620003bf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003f157634e487b7160e01b600052601160045260246000fd5b92915050565b61086f80620004076000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a0823114610141578063902d55a51461016a57806395d89b411461017c578063a457c2d714610184578063a9059cbb14610197578063dd62ed3e146101aa57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101bd565b6040516100ce91906106b9565b60405180910390f35b6100ea6100e5366004610723565b61024f565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a36600461074d565b610269565b604051601281526020016100ce565b6100ea61013c366004610723565b61028d565b6100fe61014f366004610789565b6001600160a01b031660009081526020819052604090205490565b6100fe6a52b7d2dcc80cd2e400000081565b6100c16102af565b6100ea610192366004610723565b6102be565b6100ea6101a5366004610723565b61033e565b6100fe6101b83660046107ab565b61034c565b6060600380546101cc906107de565b80601f01602080910402602001604051908101604052809291908181526020018280546101f8906107de565b80156102455780601f1061021a57610100808354040283529160200191610245565b820191906000526020600020905b81548152906001019060200180831161022857829003601f168201915b5050505050905090565b60003361025d818585610377565b60019150505b92915050565b60003361027785828561049b565b610282858585610515565b506001949350505050565b60003361025d8185856102a0838361034c565b6102aa9190610818565b610377565b6060600480546101cc906107de565b600033816102cc828661034c565b9050838110156103315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102828286868403610377565b60003361025d818585610515565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103d95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610328565b6001600160a01b03821661043a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610328565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104a7848461034c565b9050600019811461050f57818110156105025760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610328565b61050f8484848403610377565b50505050565b6001600160a01b0383166105795760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610328565b6001600160a01b0382166105db5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610328565b6001600160a01b038316600090815260208190526040902054818110156106535760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610328565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361050f565b600060208083528351808285015260005b818110156106e6578581018301518582016040015282016106ca565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461071e57600080fd5b919050565b6000806040838503121561073657600080fd5b61073f83610707565b946020939093013593505050565b60008060006060848603121561076257600080fd5b61076b84610707565b925061077960208501610707565b9150604084013590509250925092565b60006020828403121561079b57600080fd5b6107a482610707565b9392505050565b600080604083850312156107be57600080fd5b6107c783610707565b91506107d560208401610707565b90509250929050565b600181811c908216806107f257607f821691505b60208210810361081257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026357634e487b7160e01b600052601160045260246000fdfea26469706673582212205989477c00538021884aa74e9d9e3efa1ead1fbc7ea5fcc5b8f181f3649f921064736f6c63430008120033'

export class Drivn__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Drivn> {
    return super.deploy(name, symbol, overrides || {}) as Promise<Drivn>
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {})
  }
  attach(address: string): Drivn {
    return super.attach(address) as Drivn
  }
  connect(signer: Signer): Drivn__factory {
    return super.connect(signer) as Drivn__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): DrivnInterface {
    return new utils.Interface(_abi) as DrivnInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Drivn {
    return new Contract(address, _abi, signerOrProvider) as Drivn
  }
}
